{"ast":null,"code":"import { TODO_ADDED, TODO_REMOVED, TODO_COMPLETED, TODO_SAVED, TODO_DONE_FILTRED, TODO_NOTDONE_FILTRED, TODOS_RESET } from '../constants';\nconst todos = [{\n  id: 1,\n  description: \"tache 1\",\n  date: \"2020-12-1\",\n  isCompleted: false,\n  importance: \"\"\n}, {\n  id: 2,\n  description: \"tache 2\",\n  date: \"2020-12-1\",\n  isCompleted: false,\n  importance: \"\"\n}, {\n  id: 3,\n  description: \"tache 3\",\n  date: \"2020-12-1\",\n  isCompleted: false,\n  importance: \"\"\n}];\nexport const mgntTodosReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : todos;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TODO_ADDED:\n      return [{\n        id: state.length + 1,\n        description: action.payload,\n        date: new Date().getFullYear() + \"-\" + new Date().getMonth() + \"-\" + new Date().getDate(),\n        isCompleted: false,\n        importance: \"\"\n      }, ...state];\n\n    case TODO_REMOVED:\n      return state.filter((el, i) => el.id !== action.payload);\n\n    case TODO_COMPLETED:\n      return state.map((el, i) => el.id === action.payload ? { ...el,\n        isCompleted: !el.isCompleted\n      } : { ...el\n      });\n\n    case TODO_SAVED:\n      return state.map((el, i) => el.id === action.payload.id ? action.payload.newValue : { ...el\n      });\n\n    case TODO_DONE_FILTRED:\n      return state.filter((el, i) => el.isCompleted);\n\n    case TODO_NOTDONE_FILTRED:\n      return state.filter((el, i) => !el.isCompleted);\n\n    case TODOS_RESET:\n      return todos;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/mohamed/Bureau/redux-challenge/src/Components/Redux/reducers/todosReducer.js"],"names":["TODO_ADDED","TODO_REMOVED","TODO_COMPLETED","TODO_SAVED","TODO_DONE_FILTRED","TODO_NOTDONE_FILTRED","TODOS_RESET","todos","id","description","date","isCompleted","importance","mgntTodosReducer","state","action","type","length","payload","Date","getFullYear","getMonth","getDate","filter","el","i","map","newValue"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,YAAnB,EAAgCC,cAAhC,EAAgDC,UAAhD,EAA4DC,iBAA5D,EAA8EC,oBAA9E,EAAoGC,WAApG,QAAsH,cAAtH;AAOA,MAAMC,KAAK,GAAC,CACJ;AACIC,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,WAAW,EAAC,SAFhB;AAGIC,EAAAA,IAAI,EAAE,WAHV;AAIIC,EAAAA,WAAW,EAAC,KAJhB;AAKIC,EAAAA,UAAU,EAAC;AALf,CADI,EAQJ;AACIJ,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,WAAW,EAAC,SAFhB;AAGIC,EAAAA,IAAI,EAAE,WAHV;AAIIC,EAAAA,WAAW,EAAC,KAJhB;AAKIC,EAAAA,UAAU,EAAC;AALf,CARI,EAeJ;AACIJ,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,WAAW,EAAC,SAFhB;AAGIC,EAAAA,IAAI,EAAE,WAHV;AAIIC,EAAAA,WAAW,EAAC,KAJhB;AAKIC,EAAAA,UAAU,EAAC;AALf,CAfI,CAAZ;AAwBA,OAAO,MAAMC,gBAAgB,GAAG,YAAsB;AAAA,MAArBC,KAAqB,uEAAfP,KAAe;AAAA,MAATQ,MAAS;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhB,UAAL;AACA,aAAO,CAAC;AACJQ,QAAAA,EAAE,EAACM,KAAK,CAACG,MAAN,GAAa,CADZ;AAEJR,QAAAA,WAAW,EAACM,MAAM,CAACG,OAFf;AAGJR,QAAAA,IAAI,EAAC,IAAIS,IAAJ,GAAWC,WAAX,KAAyB,GAAzB,GAA8B,IAAID,IAAJ,GAAWE,QAAX,EAA9B,GAAoD,GAApD,GAAyD,IAAIF,IAAJ,GAAWG,OAAX,EAH1D;AAIJX,QAAAA,WAAW,EAAC,KAJR;AAKJC,QAAAA,UAAU,EAAC;AALP,OAAD,EAML,GAAGE,KANE,CAAP;;AAOA,SAAKb,YAAL;AACI,aAAOa,KAAK,CAACS,MAAN,CAAa,CAACC,EAAD,EAAIC,CAAJ,KAAQD,EAAE,CAAChB,EAAH,KAAQO,MAAM,CAACG,OAApC,CAAP;;AACJ,SAAKhB,cAAL;AACI,aAAOY,KAAK,CAACY,GAAN,CAAU,CAACF,EAAD,EAAIC,CAAJ,KAASD,EAAE,CAAChB,EAAH,KAAQO,MAAM,CAACG,OAAf,GAAwB,EAAC,GAAGM,EAAJ;AAAOb,QAAAA,WAAW,EAAC,CAACa,EAAE,CAACb;AAAvB,OAAxB,GAA4D,EAAC,GAAGa;AAAJ,OAA/E,CAAP;;AACJ,SAAKrB,UAAL;AACI,aAAOW,KAAK,CAACY,GAAN,CAAU,CAACF,EAAD,EAAIC,CAAJ,KAAQD,EAAE,CAAChB,EAAH,KAAQO,MAAM,CAACG,OAAP,CAAeV,EAAvB,GAA2BO,MAAM,CAACG,OAAP,CAAeS,QAA1C,GAAmD,EAAC,GAAGH;AAAJ,OAArE,CAAP;;AACJ,SAAKpB,iBAAL;AACI,aAAOU,KAAK,CAACS,MAAN,CAAa,CAACC,EAAD,EAAIC,CAAJ,KAASD,EAAE,CAACb,WAAzB,CAAP;;AACJ,SAAKN,oBAAL;AACI,aAAOS,KAAK,CAACS,MAAN,CAAa,CAACC,EAAD,EAAIC,CAAJ,KAAS,CAACD,EAAE,CAACb,WAA1B,CAAP;;AACJ,SAAKL,WAAL;AACI,aAAOC,KAAP;;AACJ;AACA,aAAOO,KAAP;AAtBJ;AAwBH,CAzBM","sourcesContent":["import {TODO_ADDED,TODO_REMOVED,TODO_COMPLETED, TODO_SAVED, TODO_DONE_FILTRED,TODO_NOTDONE_FILTRED, TODOS_RESET} from '../constants'\n\n\n\n\n\n\nconst todos=[\n        {\n            id:1,\n            description:\"tache 1\",\n            date :\"2020-12-1\",\n            isCompleted:false,\n            importance:\"\"\n        },\n        {\n            id:2,\n            description:\"tache 2\",\n            date :\"2020-12-1\",\n            isCompleted:false,\n            importance:\"\"\n        },\n        {\n            id:3,\n            description:\"tache 3\",\n            date :\"2020-12-1\",\n            isCompleted:false,\n            importance:\"\"\n        }\n]\n\nexport const mgntTodosReducer = (state=todos,action)=>{\n    switch(action.type){\n        case TODO_ADDED:\n        return [{\n            id:state.length+1,\n            description:action.payload,\n            date:new Date().getFullYear()+\"-\"+ new Date().getMonth()+\"-\"+ new Date().getDate(),\n            isCompleted:false,\n            importance:\"\"\n        },...state];\n        case TODO_REMOVED:\n            return state.filter((el,i)=>el.id!==action.payload);\n        case TODO_COMPLETED:\n            return state.map((el,i)=> el.id===action.payload? {...el,isCompleted:!el.isCompleted}:{...el})\n        case TODO_SAVED:\n            return state.map((el,i)=>el.id===action.payload.id? action.payload.newValue:{...el});\n        case TODO_DONE_FILTRED:\n            return state.filter((el,i)=> el.isCompleted)\n        case TODO_NOTDONE_FILTRED:\n            return state.filter((el,i)=> !el.isCompleted)\n        case TODOS_RESET:\n            return todos\n        default:\n        return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}